circuit multiplier :
  module multiplier :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip a_in : UInt<53>, flip b_in : UInt<53>, prod_out : UInt<106>}

    reg a_in_reg : UInt<53>, clock with :
      reset => (UInt<1>("h0"), a_in_reg) @[multiplier.scala 15:21]
    reg b_in_reg : UInt<53>, clock with :
      reset => (UInt<1>("h0"), b_in_reg) @[multiplier.scala 16:21]
    a_in_reg <= io.a_in @[multiplier.scala 18:12]
    b_in_reg <= io.b_in @[multiplier.scala 19:12]
    node _T = bits(a_in_reg, 52, 0) @[multiplier.scala 36:46]
    node _T_1 = bits(b_in_reg, 52, 0) @[multiplier.scala 37:46]
    wire _WIRE : UInt[2] @[multiplier.scala 42:20]
    node _T_2 = bits(a_in_reg, 25, 0) @[multiplier.scala 44:26]
    _WIRE[0] <= _T_2 @[multiplier.scala 44:15]
    node _T_3 = bits(a_in_reg, 51, 26) @[multiplier.scala 44:26]
    _WIRE[1] <= _T_3 @[multiplier.scala 44:15]
    node seqMulA_2 = bits(a_in_reg, 52, 52) @[multiplier.scala 48:30]
    wire _WIRE_1 : UInt[3] @[multiplier.scala 54:20]
    node _T_4 = bits(b_in_reg, 16, 0) @[multiplier.scala 56:26]
    _WIRE_1[0] <= _T_4 @[multiplier.scala 56:15]
    node _T_5 = bits(b_in_reg, 33, 17) @[multiplier.scala 56:26]
    _WIRE_1[1] <= _T_5 @[multiplier.scala 56:15]
    node _T_6 = bits(b_in_reg, 50, 34) @[multiplier.scala 56:26]
    _WIRE_1[2] <= _T_6 @[multiplier.scala 56:15]
    node seqMulB_3 = bits(b_in_reg, 52, 51) @[multiplier.scala 59:30]
    node _T_7 = mul(_WIRE[0], _WIRE_1[0]) @[multiplier.scala 94:103]
    node _T_8 = mul(_WIRE[0], _WIRE_1[1]) @[multiplier.scala 94:103]
    node _T_9 = mul(_WIRE[0], _WIRE_1[2]) @[multiplier.scala 94:103]
    node _T_10 = mul(_WIRE[0], seqMulB_3) @[multiplier.scala 94:103]
    node _T_11 = mul(_WIRE[1], _WIRE_1[0]) @[multiplier.scala 94:103]
    node _T_12 = mul(_WIRE[1], _WIRE_1[1]) @[multiplier.scala 94:103]
    node _T_13 = mul(_WIRE[1], _WIRE_1[2]) @[multiplier.scala 94:103]
    node _T_14 = mul(_WIRE[1], seqMulB_3) @[multiplier.scala 94:103]
    node _T_15 = mul(seqMulA_2, _WIRE_1[0]) @[multiplier.scala 94:103]
    node _T_16 = mul(seqMulA_2, _WIRE_1[1]) @[multiplier.scala 94:103]
    node _T_17 = mul(seqMulA_2, _WIRE_1[2]) @[multiplier.scala 94:103]
    node _T_18 = mul(seqMulA_2, seqMulB_3) @[multiplier.scala 94:103]
    node _T_19 = shr(_T_7, 17) @[multiplier.scala 98:189]
    node _T_20 = add(_T_19, _T_8) @[multiplier.scala 98:225]
    node _T_21 = bits(_T_7, 16, 0) @[multiplier.scala 98:233]
    node _T_22 = cat(_T_20, _T_21) @[Cat.scala 30:58]
    node _T_23 = shr(_T_22, 34) @[multiplier.scala 98:189]
    node _T_24 = add(_T_23, _T_9) @[multiplier.scala 98:225]
    node _T_25 = bits(_T_22, 33, 0) @[multiplier.scala 98:233]
    node _T_26 = cat(_T_24, _T_25) @[Cat.scala 30:58]
    node _T_27 = shr(_T_26, 51) @[multiplier.scala 98:189]
    node _T_28 = add(_T_27, _T_10) @[multiplier.scala 98:225]
    node _T_29 = bits(_T_26, 50, 0) @[multiplier.scala 98:233]
    node _T_30 = cat(_T_28, _T_29) @[Cat.scala 30:58]
    node _T_31 = shr(_T_11, 17) @[multiplier.scala 98:189]
    node _T_32 = add(_T_31, _T_12) @[multiplier.scala 98:225]
    node _T_33 = bits(_T_11, 16, 0) @[multiplier.scala 98:233]
    node _T_34 = cat(_T_32, _T_33) @[Cat.scala 30:58]
    node _T_35 = shr(_T_34, 34) @[multiplier.scala 98:189]
    node _T_36 = add(_T_35, _T_13) @[multiplier.scala 98:225]
    node _T_37 = bits(_T_34, 33, 0) @[multiplier.scala 98:233]
    node _T_38 = cat(_T_36, _T_37) @[Cat.scala 30:58]
    node _T_39 = shr(_T_38, 51) @[multiplier.scala 98:189]
    node _T_40 = add(_T_39, _T_14) @[multiplier.scala 98:225]
    node _T_41 = bits(_T_38, 50, 0) @[multiplier.scala 98:233]
    node _T_42 = cat(_T_40, _T_41) @[Cat.scala 30:58]
    node _T_43 = shr(_T_15, 17) @[multiplier.scala 98:189]
    node _T_44 = add(_T_43, _T_16) @[multiplier.scala 98:225]
    node _T_45 = bits(_T_15, 16, 0) @[multiplier.scala 98:233]
    node _T_46 = cat(_T_44, _T_45) @[Cat.scala 30:58]
    node _T_47 = shr(_T_46, 34) @[multiplier.scala 98:189]
    node _T_48 = add(_T_47, _T_17) @[multiplier.scala 98:225]
    node _T_49 = bits(_T_46, 33, 0) @[multiplier.scala 98:233]
    node _T_50 = cat(_T_48, _T_49) @[Cat.scala 30:58]
    node _T_51 = shr(_T_50, 51) @[multiplier.scala 98:189]
    node _T_52 = add(_T_51, _T_18) @[multiplier.scala 98:225]
    node _T_53 = bits(_T_50, 50, 0) @[multiplier.scala 98:233]
    node _T_54 = cat(_T_52, _T_53) @[Cat.scala 30:58]
    node _T_55 = shr(_T_30, 26) @[multiplier.scala 103:148]
    node _T_56 = add(_T_55, _T_42) @[multiplier.scala 103:183]
    node _T_57 = bits(_T_30, 25, 0) @[multiplier.scala 103:191]
    node _T_58 = cat(_T_56, _T_57) @[Cat.scala 30:58]
    node _T_59 = shr(_T_58, 52) @[multiplier.scala 103:148]
    node _T_60 = add(_T_59, _T_54) @[multiplier.scala 103:183]
    node _T_61 = bits(_T_58, 51, 0) @[multiplier.scala 103:191]
    node _T_62 = cat(_T_60, _T_61) @[Cat.scala 30:58]
    reg prod : UInt, clock with :
      reset => (UInt<1>("h0"), prod) @[Reg.scala 15:16]
    when UInt<1>("h1") : @[Reg.scala 16:19]
      prod <= _T_62 @[Reg.scala 16:23]
    io.prod_out <= prod @[multiplier.scala 106:15]

